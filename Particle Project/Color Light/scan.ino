#define PORTB (GPIOB->ODR)
/*#define PINB (GPIOB->IDR)*/
/*#define PORTA (GPIOA->ODR)*/
/*#define PINA (GPIOA->IDR)*/
#define PINC (GPIOC->IDR)

const int16_t mask = 0b11111000;
const int mask2 = 	0b000101100;
const int row_count = 7;
const int rows[7] = {A3, A4, A5, DAC, WKP, RX, TX};
int getNum = 15 ;
const int16_t char_patterns[13][7] = {
                        {~0b0000000001110000, //0
                         ~0b0000000010001000,
                         ~0b0000000010011000,
                         ~0b0000000010101000,
                         ~0b0000000011001000,
                         ~0b0000000010001000,
                         ~0b0000000001110000},
                        {~0b0000000000100000, //1
                         ~0b0000000001100000,
                         ~0b0000000000100000,
                         ~0b0000000000100000,
                         ~0b0000000000100000,
                         ~0b0000000000100000,
                         ~0b0000000001110000},
                        {~0b0000000001110000, //2
                         ~0b0000000010001000,
                         ~0b0000000000001000,
                         ~0b0000000000110000,
                         ~0b0000000001000000,
                         ~0b0000000010000000,
                         ~0b0000000011111000},
                        {~0b0000000011111000, //3
                         ~0b0000000000001000,
                         ~0b0000000000010000,
                         ~0b0000000000110000,
                         ~0b0000000000001000,
                         ~0b0000000010001000,
                         ~0b0000000001110000},
                        {~0b0000000000010000, //4
                         ~0b0000000000110000,
                         ~0b0000000001010000,
                         ~0b0000000010010000,
                         ~0b0000000011111000,
                         ~0b0000000000010000,
                         ~0b0000000000010000},
                        {~0b0000000011111000, //5
                         ~0b0000000010000000,
                         ~0b0000000011110000,
                         ~0b0000000000001000,
                         ~0b0000000000001000,
                         ~0b0000000010001000,
                         ~0b0000000001110000},
                        {~0b0000000000111000, //6
                         ~0b0000000001000000,
                         ~0b0000000010000000,
                         ~0b0000000011110000,
                         ~0b0000000010001000,
                         ~0b0000000010001000,
                         ~0b0000000001110000},
                        {~0b0000000011111000, //7
                         ~0b0000000000001000,
                         ~0b0000000000010000,
                         ~0b0000000000100000,
                         ~0b0000000001000000,
                         ~0b0000000001000000,
                         ~0b0000000001000000},
                        {~0b0000000001110000, //8
                         ~0b0000000010001000,
                         ~0b0000000010001000,
                         ~0b0000000001110000,
                         ~0b0000000010001000,
                         ~0b0000000010001000,
                         ~0b0000000001110000},
                        {~0b0000000001110000, //9
                         ~0b0000000010001000,
                         ~0b0000000010001000,
                         ~0b0000000001111000,
                         ~0b0000000000001000,
                         ~0b0000000000010000,
                         ~0b0000000011100000},
                        {~0b0000000000100000, //!
                         ~0b0000000000100000,
                         ~0b0000000000100000,
                         ~0b0000000000100000,
                         ~0b0000000000100000,
                         ~0b0000000000000000,
                         ~0b0000000000100000},
                        {~0b0000000000100000,
                         ~0b0000000010101000, //*
                         ~0b0000000001110000,
                         ~0b0000000011111000,
                         ~0b0000000001110000,
                         ~0b0000000010101000,
                         ~0b0000000000100000},
                        {~0b0000000001010000, //#
                         ~0b0000000001010000,
                         ~0b0000000011111000,
                         ~0b0000000001010000,
                         ~0b0000000011111000,
                         ~0b0000000001010000,
                         ~0b0000000001010000}
};
const int conversion_table[4][3] ={
                        {1, 2, 3},
                        {4, 5, 6},
                        {7, 8, 9},
                        {11, 0, 12}
};
void setup(){
  Serial.begin(9600);
  pinMode(D4, OUTPUT);
  pinMode(D3, OUTPUT);
  pinMode(D2, OUTPUT);
  pinMode(D0,OUTPUT);
  pinMode(D1,OUTPUT);
  pinMode(A0,INPUT);
  pinMode(A1,INPUT);
  pinMode(A2,INPUT);
}
void loop(){
  display(getNum);
}

void display(int index){
    for (int j = 0; j < row_count; j++){
      pinMode(rows[j],OUTPUT);
      digitalWrite(rows[j], HIGH);
      if(index==15){
        PORTB = (PORTB & ~mask) | (~0b00000000 & mask);
      }else{
        PORTB = (PORTB & ~mask) | (char_patterns[index][j] & mask);
      }
      delay(1);
      int val = (PINC&mask2);
      if(j-3<0){
        getNum=getNum;
      }else{
        if(val == 4){
          getNum= (conversion_table[j-3][0]);
        }
        if(val ==8){
          getNum= (conversion_table[j-3][1]);
        }
        if(val ==32){
          getNum= (conversion_table[j-3][2]);
        }
      }
      delay(1);
      digitalWrite(rows[j], LOW);
      pinMode(rows[j],INPUT);
    }
}
